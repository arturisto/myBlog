{"version":3,"sources":["components/forms/subscribeOnBlog.js","components/recentPosts/recentPost.js","components/recentPosts/recentPostsSideBar.js","containers/RightSideBar/rightSideBar.js","../node_modules/react-bootstrap/esm/Row.js","Pages/blogPage/blogPost/blogPost.js","Pages/blogPage/blogPage.js","actions/utils.js","actions/blogActions.js"],"names":["subscribeOnBlog","props","console","log","onSubscribe","view","isError","Form","className","onSubmit","e","Group","controlId","Label","Control","type","placeholder","name","Button","variant","RecentPost","post","data","postUrl","getBaseFrontUrl","id","src","previewImageUrl","alt","href","title","publishedAt","RecentPosts","posts","map","item","i","RightSideBar","state","subscribeView","subscribeSubmitError","recentPosts","handleSubscribe","bind","event","preventDefault","target","elements","email","value","subscribe","reply","status","this","setState","getLatestBlogs","Component","DEVICE_SIZES","Row","React","forwardRef","_ref","ref","bsPrefix","noGutters","_ref$as","as","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","createElement","_extends","classNames","apply","concat","displayName","defaultProps","blogPost","blogData","Parser","content","blogTitle","BlogPage","isPreview","isLoading","blogId","match","params","getSingleBlogEntry","blogEntry","body","Col","lg","process","REACT_APP_ENV","REACT_APP_PROD_FRONTEND","getBaseUrl","window","location","origin","a","baseUrl","url","config","headers","axios","get","response","blogs","getEntriesByType","pageNumber","tags","entryType","entryId","fetch","method","localStorage","getItem","result","json","returnData","JSON","stringify"],"mappings":"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","file":"static/js/12.b2274db8.chunk.js","sourcesContent":["import Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport default function subscribeOnBlog(props) {\r\n  console.log(props);\r\n  const onSubscribe = props.onSubscribe;\r\n  const view = props.view;\r\n  const isError = props.isError;\r\n  return (\r\n    <>\r\n      {view ? (\r\n        <Form className=\"w-75 m-auto\" onSubmit={(e) => onSubscribe(e)}>\r\n          <h6>?רוצה לקבל עדכונים לפני כולם</h6>\r\n          <p></p>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>\r\n              הרשם כאן וקבל עדכונים ישירות למייל ברגע שמשהו טעים מתפרסם\r\n            </Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            הרשם\r\n          </Button>\r\n        </Form>\r\n      ) : isError ? (\r\n        <div>אופס! הייתה שגיעה, תנסו יותר מאוחר</div>\r\n      ) : (\r\n        <div>תודה, נהיה בקשר :)</div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./recentPosts.scss\";\r\nimport { getBaseFrontUrl } from \"../../actions/utils\";\r\nfunction RecentPost(props) {\r\n  const post = props.data;\r\n  console.log(post);\r\n  const baseUrl = getBaseFrontUrl(post.id);\r\n  const postUrl = baseUrl + \"blogpage/\" + post.id;\r\n\r\n  return (\r\n    <div className=\"recent-posts\">\r\n      <div className=\"card mb-3\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-md-4\">\r\n            <img src={post.previewImageUrl} className=\"card-img\" alt=\"...\" />\r\n          </div>\r\n          <div className=\"col-md-8 pr-2 pt-3 d-flex flex-column justify-content-around \">\r\n            <div>\r\n              <div className=\"recent-post-title\">\r\n                <a href={postUrl} alt={\"blog post \" + post.title}>\r\n                  {post.title}\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-bottom published-at \">\r\n              Published {post.publishedAt}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecentPost;\r\n","import React from \"react\";\r\nimport RecentPost from \"./recentPost.js\";\r\n\r\nfunction RecentPosts(props) {\r\n  const posts = props.posts;\r\n\r\n  return (\r\n    <div className=\"recent-posts\">\r\n      {posts.map(function (item, i) {\r\n        return <RecentPost key={i} data={item} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecentPosts;\r\n","import { Component, Fragment } from \"react\";\r\nimport \"./rightSideBar.scss\";\r\nimport SubscribeOnBlog from \"../../components/forms/subscribeOnBlog\";\r\nimport RecentPosts from \"../../components/recentPosts/recentPostsSideBar\";\r\nimport { subscribe, getLatestBlogs } from \"../../actions/blogActions\";\r\nclass RightSideBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      state: 0,\r\n      subscribeView: true,\r\n      subscribeSubmitError: false,\r\n      recentPosts: [],\r\n    };\r\n\r\n    this.handleSubscribe = this.handleSubscribe.bind(this);\r\n  }\r\n\r\n  async handleSubscribe(event) {\r\n    event.preventDefault();\r\n    console.log(\"subscribed!\", event.target.elements.email.value);\r\n    const email = event.target.elements.email.value;\r\n    const reply = await subscribe(email);\r\n    console.log(reply);\r\n    if (reply.status === 200) {\r\n      this.setState({\r\n        subscribeView: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        subscribeView: false,\r\n        subscribeSubmitError: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const recentPosts = await getLatestBlogs();\r\n    this.state.recentPosts = recentPosts;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"rightSideBar\">\r\n        <SubscribeOnBlog\r\n          onSubscribe={this.handleSubscribe}\r\n          view={this.state.subscribeView}\r\n          isError={this.state.subscribeSubmitError}\r\n        />\r\n        <RecentPosts posts={this.state.recentPosts} />\r\n        <div> ads</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default RightSideBar;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import React, { Fragment } from \"react\";\r\nimport \"./blogPost.scss\";\r\n\r\n// import test from \"../../../actions/test_fe_be\";\r\nimport Parser from \"html-react-parser\";\r\n\r\nexport default function blogPost(props) {\r\n  const blogData = props.blogData ? Parser(props.blogData.content) : \"\";\r\n  const blogTitle = props.blogData ? Parser(props.blogData.title) : \"\";\r\n\r\n  return (\r\n    <div className=\"mt-3 ml-5 mr-5 blog-fragment \">\r\n      <h2>\r\n        <i>{blogTitle}</i>\r\n      </h2>\r\n      {blogData}\r\n    </div>\r\n  );\r\n}","//*****imports******//\r\nimport React, { Fragment, Component } from \"react\";\r\n//Containers\r\nimport RightSideBar from \"../../containers/RightSideBar/rightSideBar\";\r\n//Components\r\nimport BasicLoader from \"../../components/loaders/basicLoader\";\r\n//Style & Bootstrap\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport \"./blogPage.scss\";\r\n//others\r\nimport BlogPost from \"./blogPost/blogPost\";\r\n\r\n//actions\r\nimport { getSingleBlogEntry } from \"../../actions/blogActions\";\r\n//***** main *****//\r\n\r\nclass BlogPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      blogData: false,\r\n      isPreview: false,\r\n      isLoading: true,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const blogId = this.props.match.params.id;\r\n    const blogEntry = await getSingleBlogEntry(blogId);\r\n    console.log(blogEntry.body);\r\n    this.setState({\r\n      blogData: blogEntry.body,\r\n      isLoading: false,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Row className=\"blogPageMain\">\r\n          {/* <Col lg = {3}>\r\n                <LeftSideBar text = {this.state.fillerText} />  \r\n                </Col> */}\r\n          <Col lg={8}>\r\n            {this.state.isLoading ? (\r\n              <BasicLoader />\r\n            ) : (\r\n              <BlogPost blogData={this.state.blogData} />\r\n            )}\r\n          </Col>\r\n          <Col lg={3}>\r\n            <RightSideBar />\r\n          </Col>\r\n        </Row>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default BlogPage;\r\n","const getBaseFrontUrl = () => {\r\n  const reactAppEnv = process.env.REACT_APP_ENV;\r\n  if (reactAppEnv === \"dev\") {\r\n    return process.env.REACT_APP_DEV_FRONTEND;\r\n  } else {\r\n    return process.env.REACT_APP_PROD_FRONTEND;\r\n  }\r\n};\r\n\r\nconst getBaseUrl = () => {\r\n  const reactAppEnv = process.env.NODE_ENV;\r\n  if (reactAppEnv === \"dev\") {\r\n    return process.env.REACT_APP_DEV_SERVER;\r\n  } else {\r\n    return window.location.origin;\r\n  }\r\n};\r\n\r\nexport { getBaseFrontUrl, getBaseUrl };\r\n","import axios from \"axios\";\r\nimport { getBaseUrl } from \"./utils\";\r\n\r\nconst getLatestBlogs = async () => {\r\n  const baseUrl = getBaseUrl();\r\n  const url = baseUrl + \"/blog/getlatest\";\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const response = await axios.get(url, config);\r\n    const blogs = response.data.posts;\r\n    return blogs;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return false;\r\n  }\r\n};\r\n\r\nconst getEntriesByType = async (type, pageNumber, tags) => {\r\n  const baseUrl = getBaseUrl();\r\n  const url = baseUrl + \"/blog/getEntriesByType\";\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: {\r\n      entryType: type,\r\n      pageNumber: pageNumber,\r\n      tags: tags,\r\n    },\r\n  };\r\n  try {\r\n    const response = await axios.post(url, config);\r\n    const blogs = response.data;\r\n    return blogs;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return false;\r\n  }\r\n};\r\n\r\nconst getSingleBlogEntry = async (entryId) => {\r\n  try {\r\n    const baseUrl = getBaseUrl();\r\n    const url = baseUrl + \"/blog/getnewentry?blogId=\" + entryId;\r\n\r\n    const result = await fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-access-token\": localStorage.getItem(\"token\"),\r\n      },\r\n    });\r\n    const returnData = await result.json();\r\n    return returnData;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst subscribe = async (email) => {\r\n  try {\r\n    const baseUrl = getBaseUrl();\r\n    const url = baseUrl + \"/blog/subscribe\";\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email: email }),\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport { getLatestBlogs, getEntriesByType, getSingleBlogEntry, subscribe };\r\n"],"sourceRoot":""}