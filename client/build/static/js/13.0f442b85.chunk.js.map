{"version":3,"sources":["containers/login/login.js","containers/login/signUp.js","Pages/login/login.js","actions/utils.js","actions/userActions.js"],"names":["Login","props","useState","username","setUsername","password","setPassword","event","a","preventDefault","login","getLogin","console","log","onLogin","className","Form","onSubmit","Group","size","controlId","Label","Control","autoFocus","type","value","onChange","e","target","Button","block","disabled","length","name","setName","signup","status","onSignup","LoginPage","state","isLoggedIn","handleLogin","bind","handleSignup","this","setState","alert","Component","getBaseFrontUrl","process","REACT_APP_ENV","REACT_APP_PROD_FRONTEND","getBaseUrl","window","location","origin","data","baseUrl","url","fetch","method","headers","body","JSON","stringify","response","json","token","auth","localStorage","setItem","getItem","removeItem","msg","newUser","saveBlog","newEntry","title","tags","seoTags","newBlogEntry","updateBlog","updatedEntry","blogId","entryToUpdate","id","getSingleBlogEntry","entryId","result","returnData","uploadImageToServer","formData","config","axios","post","then","res","imageUrl","getBlogPostHeaders","get","resp","error","errorText","deleteEntries","blogIds","reply","handleApiBoolReply","publishEntries","unPublishEntries","getAllTags","saveNewTag","tag","deleteTag"],"mappings":"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","file":"static/js/13.0f442b85.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./login.scss\";\r\n\r\nimport { login } from \"../../actions/userActions\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Login(props) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  function validateForm() {\r\n    return username.length > 0 && password.length > 0;\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const getLogin = await login(username, password);\r\n    console.log(getLogin);\r\n    if (getLogin) {\r\n      props.onLogin(true);\r\n    } else {\r\n      props.onLogin(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group size=\"lg\" controlId=\"username\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n          Login\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./login.scss\";\r\n\r\nimport { signup } from \"../../actions/userActions\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Login(props) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n\r\n  function validateForm() {\r\n    return username.length > 0 && password.length > 0;\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const reply = await signup(name, username, password);\r\n\r\n    reply.status = 200 ? props.onSignup(true) : props.onSignup(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group size=\"lg\" controlId=\"username\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n          Sign Up\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","//*****imports******//\r\nimport React, { Fragment, Component } from \"react\";\r\n//Containers\r\nimport Navbar from \"../../containers/NavBar/navbar\";\r\nimport Login from \"../../containers/login/login\";\r\nimport SignUp from \"../../containers/login/signUp\";\r\n\r\n//Bootstrap\r\nimport Button from \"react-bootstrap/Button\";\r\n//styles\r\nimport \"./login.scss\";\r\n//***** main *****//\r\n\r\nclass LoginPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoggedIn: false,\r\n    };\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.handleSignup = this.handleSignup.bind(this);\r\n  }\r\n\r\n  handleLogin(status) {\r\n    if (status) {\r\n      this.setState({\r\n        isLoggedIn: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isLoggedIn: false,\r\n      });\r\n      alert(\"error logging in\");\r\n    }\r\n  }\r\n  handleSignup(status) {\r\n    status ? alert(\"user created successfully\") : alert(\"error creating user\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"auth-form\">\r\n          {this.state.isLoggedIn ? (\r\n            <>\r\n              <SignUp onSignup={(status) => this.handleSignup(status)}></SignUp>\r\n            </>\r\n          ) : (\r\n            <Login onLogin={(status) => this.handleLogin(status)}></Login>\r\n          )}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default LoginPage;\r\n","const getBaseFrontUrl = () => {\r\n  const reactAppEnv = process.env.REACT_APP_ENV;\r\n  if (reactAppEnv === \"dev\") {\r\n    return process.env.REACT_APP_DEV_FRONTEND;\r\n  } else {\r\n    return process.env.REACT_APP_PROD_FRONTEND;\r\n  }\r\n};\r\n\r\nconst getBaseUrl = () => {\r\n  const reactAppEnv = process.env.NODE_ENV;\r\n  if (reactAppEnv === \"dev\") {\r\n    return process.env.REACT_APP_DEV_SERVER;\r\n  } else {\r\n    return window.location.origin;\r\n  }\r\n};\r\n\r\nexport { getBaseFrontUrl, getBaseUrl };\r\n","import axios from \"axios\";\r\nimport { getBaseUrl } from \"./utils\";\r\n\r\nconst login = async (username, password) => {\r\n  try {\r\n    const data = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    const baseUrl = getBaseUrl();\r\n\r\n    const url = baseUrl + \"/user/login\";\r\n\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    const token = await response.json();\r\n\r\n    if (token.auth) {\r\n      localStorage.setItem(\"token\", token.token);\r\n      return true;\r\n    } else {\r\n      if (localStorage.getItem(\"token\")) {\r\n        localStorage.removeItem(\"token\");\r\n      }\r\n      console.log(token.msg);\r\n      return false;\r\n    }\r\n  } catch (err) {\r\n    console.log(\"error: \", err);\r\n    return false;\r\n  }\r\n};\r\nconst signup = async (name, username, password) => {\r\n  const data = {\r\n    name: name,\r\n    username: username,\r\n    password: password,\r\n  };\r\n  const baseUrl = getBaseUrl();\r\n  const url = baseUrl + \"/user/signup\";\r\n  const response = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-access-token\": localStorage.getItem(\"token\"),\r\n    },\r\n    body: JSON.stringify({ data: data }),\r\n  });\r\n\r\n  const newUser = await response.json();\r\n  console.log(newUser);\r\n  if (newUser) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\nconst saveBlog = async (newEntry, title, tags, seoTags) => {\r\n  try {\r\n    const data = {\r\n      newBlogEntry: newEntry,\r\n      title: title,\r\n      tags: tags,\r\n      seoTags: seoTags,\r\n    };\r\n    const baseUrl = getBaseUrl();\r\n    const url = baseUrl + \"/user/blogmanage/savenewentry\";\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-access-token\": localStorage.getItem(\"token\"),\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    console.log(\"response: \", response);\r\n\r\n    if (response.signup) return true;\r\n    else return false;\r\n  } catch (err) {\r\n    console.log(\"error: \", err);\r\n    return err;\r\n  }\r\n};\r\n\r\nconst updateBlog = async (updatedEntry, title, blogId, tags, seoTags) => {\r\n  try {\r\n    const data = {\r\n      entryToUpdate: updatedEntry,\r\n      title: title,\r\n      id: blogId,\r\n      tags: tags,\r\n      seoTags: seoTags,\r\n    };\r\n    const baseUrl = getBaseUrl();\r\n    const url = baseUrl + \"/user/blogmanage/updateentry\";\r\n\r\n    await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-access-token\": localStorage.getItem(\"token\"),\r\n      },\r\n      body: JSON.stringify({ data: data }),\r\n    });\r\n    return true;\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    return error;\r\n  }\r\n};\r\n\r\nconst getSingleBlogEntry = async (entryId) => {\r\n  try {\r\n    const baseUrl = getBaseUrl();\r\n    const url = baseUrl + \"/user/blogmanage/getnewentry?blogId=\" + entryId;\r\n\r\n    const result = await fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-access-token\": localStorage.getItem(\"token\"),\r\n      },\r\n    });\r\n    const returnData = await result.json();\r\n    return returnData;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst uploadImageToServer = async (formData) => {\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n      \"x-access-token\": localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n  try {\r\n    const baseUrl = getBaseUrl();\r\n    const url = baseUrl + \"/user/blogmanage/uploadimage\";\r\n    return axios.post(url, formData, config).then((res) => res.data.imageUrl);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst getBlogPostHeaders = async () => {\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      \"x-access-token\": localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n  try {\r\n    const baseUrl = getBaseUrl();\r\n    const url = baseUrl + \"/user/blogmanage/getAllPosts\";\r\n    const resp = await axios.get(url, config);\r\n    return resp.data;\r\n  } catch (error) {\r\n    return { error: \"error\", errorText: error };\r\n  }\r\n};\r\n\r\nconst deleteEntries = async (blogIds) => {\r\n  try {\r\n    const baseUrl = getBaseUrl();\r\n    const url = baseUrl + \"/user/blogmanage/deleteEntries\";\r\n    const reply = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-access-token\": localStorage.getItem(\"token\"),\r\n      },\r\n      body: JSON.stringify(blogIds),\r\n    });\r\n\r\n    return handleApiBoolReply(reply);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst publishEntries = async (blogIds) => {\r\n  try {\r\n    const baseUrl = getBaseUrl();\r\n    const url = baseUrl + \"/user/blogmanage/publishEntries\";\r\n    const reply = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-access-token\": localStorage.getItem(\"token\"),\r\n      },\r\n      body: JSON.stringify(blogIds),\r\n    });\r\n\r\n    return handleApiBoolReply(reply);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst unPublishEntries = async (blogIds) => {\r\n  try {\r\n    const baseUrl = getBaseUrl();\r\n    const url = baseUrl + \"/user/blogmanage/unPublishEntries\";\r\n    const reply = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-access-token\": localStorage.getItem(\"token\"),\r\n      },\r\n      body: JSON.stringify(blogIds),\r\n    });\r\n\r\n    return handleApiBoolReply(reply);\r\n  } catch (error) {\r\n    console.log(error);\r\n    return false;\r\n  }\r\n};\r\n\r\nconst isLogin = async () => {\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  if (token) {\r\n    const baseUrl = getBaseUrl();\r\n    const url = baseUrl + \"/user/isLogin\";\r\n    const reply = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-access-token\": token,\r\n      },\r\n    });\r\n\r\n    return handleApiBoolReply(reply);\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst getAllTags = async () => {\r\n  try {\r\n    const baseUrl = getBaseUrl();\r\n    const url = baseUrl + \"/user/blogmanage/getAllTags\";\r\n    const reply = await fetch(url, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (handleApiBoolReply(reply)) {\r\n      const body = await reply.json();\r\n      return body;\r\n    } else {\r\n      return false;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    return false;\r\n  }\r\n};\r\n\r\nconst saveNewTag = async (tag) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  try {\r\n    const baseUrl = getBaseUrl();\r\n    const url = baseUrl + \"/user/blogmanage/saveNewTag\";\r\n    const reply = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-access-token\": token,\r\n      },\r\n      body: JSON.stringify([tag]),\r\n    });\r\n    console.log(reply);\r\n    return handleApiBoolReply(reply);\r\n  } catch (error) {\r\n    console.log(error);\r\n    return false;\r\n  }\r\n};\r\nconst deleteTag = async (tags) => {\r\n  try {\r\n    console.log(tags);\r\n    const baseUrl = getBaseUrl();\r\n    const url = baseUrl + \"/user/blogmanage/deleteTag\";\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    const reply = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-access-token\": token,\r\n      },\r\n      body: JSON.stringify(tags),\r\n    });\r\n\r\n    return handleApiBoolReply(reply);\r\n  } catch (error) {\r\n    console.log(error);\r\n    return false;\r\n  }\r\n};\r\n\r\nconst handleApiBoolReply = (reply) => {\r\n  return reply.status === 200 ? true : false;\r\n};\r\n\r\nexport {\r\n  login,\r\n  signup,\r\n  saveBlog,\r\n  getSingleBlogEntry,\r\n  uploadImageToServer,\r\n  getBlogPostHeaders,\r\n  deleteEntries,\r\n  publishEntries,\r\n  unPublishEntries,\r\n  updateBlog,\r\n  isLogin,\r\n  getAllTags,\r\n  saveNewTag,\r\n  deleteTag,\r\n};\r\n"],"sourceRoot":""}